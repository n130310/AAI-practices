{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Dnl_nuebn9OHoxAPK24fmV-JxBULix3D","timestamp":1730432296939},{"file_id":"1l_GPJjnpKNgfxCGYwBYdhk5eQjOdijks","timestamp":1730172265758}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"ZLVI_WIcuT56"}},{"cell_type":"code","source":["print('Насртдинова Вероника')"],"metadata":{"id":"3AfG_Tal0P2S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 1. HTTP-запросы, ответы и погода\n","\n","Напишите HTTP-запрос для получения информации о погоде в введенном городе из API. Можно использовать API: https://open-meteo.com/. Используйте метод GET.\n","\n","\n","Ввод\n","```\n","56.50, 60.35\n","```\n","\n","Вывод\n","```\n","Сегодня (1.11) погода 20 ◦С, нет осадков, туман\n","```\n","\n","\n","\n"],"metadata":{"id":"FtjnLNIKzfMZ"}},{"cell_type":"code","source":["pip install openmeteo-requests\n","pip install requests-cache retry-requests numpy pandas\n","\n","import openmeteo_requests\n","\n","import requests_cache\n","import pandas as pd\n","from retry_requests import retry\n","\n","def weather\n","cache_session = requests_cache.CachedSession('.cache', expire_after = 3600)\n","retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)\n","openmeteo = openmeteo_requests.Client(session = retry_session)\n","\n","url = \"https://api.open-meteo.com/v1/forecast\"\n","params = {\n","\t\"latitude\": 52.52,\n","\t\"longitude\": 13.41,\n","\t\"hourly\": [\"temperature_2m\", \"precipitation\"]\n","}\n","responses = openmeteo.weather_api(url, params=params)\n","\n","\n","response = responses[0]\n","print(f\"Coordinates {response.Latitude()}°N {response.Longitude()}°E\")\n","print(f\"Elevation {response.Elevation()} m asl\")\n","print(f\"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}\")\n","print(f\"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s\")\n","\n","\n","hourly = response.Hourly()\n","hourly_temperature_2m = hourly.Variables(0).ValuesAsNumpy()\n","hourly_precipitation = hourly.Variables(1).ValuesAsNumpy()\n","\n","hourly_data = {\"date\": pd.date_range(\n","\tstart = pd.to_datetime(hourly.Time(), unit = \"s\", utc = True),\n","\tend = pd.to_datetime(hourly.TimeEnd(), unit = \"s\", utc = True),\n","\tfreq = pd.Timedelta(seconds = hourly.Interval()),\n","\tinclusive = \"left\"\n",")}\n","hourly_data[\"temperature_2m\"] = hourly_temperature_2m\n","hourly_data[\"precipitation\"] = hourly_precipitation\n","\n","hourly_dataframe = pd.DataFrame(data = hourly_data)\n","return hourly_dataframe"],"metadata":{"id":"5Mbs40_buVRV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 2. HTTP-запросы, ответы и покемоны\n","\n","\n","Создайте код программы, которая будет взаимодействовать с API, со следующим функионалом:\n","\n","1. Используя метод GET, отправьте запрос на endpoint /pokemon, чтобы получить список первых 20 покемонов\n","\n","2. Извлеките имена покемонов из ответа и выведите их списком\n","\n","3. Введите с помощью input() название одного из покемонов\n","\n","\n","```\n","Имя покемона: clefairy\n","```\n","\n","\n","\n","4. Отправьте GET-запрос, чтобы получить полную информацию о выбранном покемоне\n","\n","5. Извлеките и выведите следующие данные о введенном покемоне:\n","\n","     • Имя\n","\n","     • Тип\n","\n","     • Вес\n","\n","     • Рост\n","\n","     • Способности\n","\n","Используйте PokéAPI (https://pokeapi.co/), который предоставляет информацию о покемонах, их характеристиках, типах и другую информацию."],"metadata":{"id":"oZ1guEbl0PZm"}},{"cell_type":"code","source":[],"metadata":{"id":"JkFmivjp25NL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 3. HTTP-запросы, ответы и посты\n","\n","Создайте программу, которая будет взаимодействовать с JSONPlaceholder API, реализуя следующие функции:\n","\n","1. Реализуйте функцию, которая выполняет GET-запрос к https://jsonplaceholder.typicode.com/posts и возвращает список постов в формате JSON\n","\n","2. Реализуйте функцию, котороая получает вводимое ID поста, выполняет GET-запрос по ID и возвращает данные поста в формате JSON\n","\n","3. Реализуйте функцию, которая выполняет обработку JSON из пункта 2 и выводит всю важную информацию в консоль"],"metadata":{"id":"h194KTer1-B3"}},{"cell_type":"code","source":[],"metadata":{"id":"YANQx4o258Zn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 4. HTTP-запросы, ответы и работа с постами\n","\n","Создайте программу, которая будет взаимодействовать с JSONPlaceholder API (из предыдущего задания), реализуя новые функции:\n","\n","1. Реализуйте функцию, которая принимает заголовок, содержимое и ID пользователя (информация вводится с помощью input()), выполняет POST-запрос для создания нового поста и возвращает информацию о созданном посте в формате JSON\n","\n","\n","```\n","Заголовок: Новый пост\n","Содержимое поста: Тут должно находиться содержимое нового поста...\n","ID пользователя: 10\n","```\n","\n","\n","\n","2. Реализуйте функцию, которая принимает ID поста, новый заголовок и новое содержимое, выполняет PUT-запрос и возвращает обновлённый пост в формате JSON\n","\n","3. Реализуйте функцию, которая принимает ID поста, выполняет DELETE-запрос и возвращает статус-код ответа"],"metadata":{"id":"4MjiaxDM58ta"}},{"cell_type":"code","source":[],"metadata":{"id":"jZUIdwq96DNl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 5. HTTP-запросы, ответы и пёсики\n","\n","Создайте программу, которая будет взаимодействовать с Dog API, которая позволит получать список пород собак, вводить несколько пород и получать их фотогрфии.\n","\n","Этапы:\n","\n","1. Создайте функцию, которая использует метод GET и возвращает список всех пород собак в формате нумерованного списка\n","\n","2. Реализуйте возможность ввода нескольких пород собак через запятую\n","\n","\n","```\n","african, chow, dingo\n","```\n","\n","\n","\n","3. Создание функции, которая реализует запрос, возвращает и выводит изображениия собак, породы которых были введены до этого\n","\n","\n","Используйте Dog API (https://dog.ceo/dog-api/), который предоставляет информацию о породах собак и их изображения.\n"],"metadata":{"id":"y0EyPsFQ6mSZ"}},{"cell_type":"code","source":[],"metadata":{"id":"CVJx0B9E8au1"},"execution_count":null,"outputs":[]}]}